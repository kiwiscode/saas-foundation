{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/client/server-actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport axios from \"axios\";\nimport prisma from \"../db/db\";\n\n// Subscribe to the newsletter\nexport async function addToNewsLetter(email: string) {\n  try {\n    const ipInfoResponse = await axios.get(\n      `https://ipinfo.io/json?token=${process.env.IPINFO_TOKEN}`\n    );\n\n    console.log(\"ip info response:\", ipInfoResponse);\n\n    const { country, city } = ipInfoResponse.data;\n\n    const existing = await prisma.newsletterSubscriber.findUnique({\n      where: { email },\n    });\n\n    if (existing) {\n      throw new Error(\"This email is already subscribed to the newsletter.\");\n    }\n\n    const subscriber = await prisma.newsletterSubscriber.create({\n      data: { email, country, city },\n    });\n\n    return subscriber;\n  } catch (error) {\n    console.error(\n      `Error adding user to the newsletter subscriber collection with email ${email}:`,\n      error\n    );\n    throw new Error(\n      \"Error occurred while adding user to the newsletter subscriber collection.\"\n    );\n  }\n}\n\n// get newsLetter subscriber\nexport async function getNewsletterSubscriber(id: number) {\n  try {\n    const subscriber = await prisma.newsletterSubscriber.findUnique({\n      where: { id },\n    });\n\n    if (subscriber) {\n      throw new Error(\"This email not found in the collection.\");\n    }\n\n    return subscriber;\n  } catch (error) {\n    console.error(`Error while getting user with this id ${id}:`, error);\n    throw new Error(\"Error occurred while getting user with this id.\");\n  }\n}\n"],"names":[],"mappings":";;;;;;IAyCsB,0BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/client/app/%28routes%29/%28dashboard%29/profile/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport { getNewsletterSubscriber } from \"@/server-actions/user.actions\";\n\nconst Page = () => {\n  const { id } = useParams();\n\n  const getSubscribers = async () => {\n    try {\n      const subscribersFromDB = await getNewsletterSubscriber(Number(id));\n\n      console.log(\"subscribers:\", subscribersFromDB);\n\n      return subscribersFromDB;\n    } catch (error) {\n      console.error(\"error:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getSubscribers();\n  }, []);\n\n  console.log(\"id received from params:\", id);\n  return <div>{id}</div>;\n};\n\nexport default Page;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,OAAO;;IACX,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,oBAAoB,MAAM,CAAA,GAAA,4JAAA,CAAA,0BAAuB,AAAD,EAAE,OAAO;YAE/D,QAAQ,GAAG,CAAC,gBAAgB;YAE5B,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,UAAU;QAC1B;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR;QACF;yBAAG,EAAE;IAEL,QAAQ,GAAG,CAAC,4BAA4B;IACxC,qBAAO,6LAAC;kBAAK;;;;;;AACf;GArBM;;QACW,qIAAA,CAAA,YAAS;;;KADpB;uCAuBS","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/client/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}