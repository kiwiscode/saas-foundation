{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/next-fs/hooks/useWindowDimension.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\ninterface WindowDimensions {\n  width: number | false;\n  height: number | false;\n  scrollX: number;\n  scrollY: number;\n}\n\nconst useWindowDimension = (): WindowDimensions => {\n  const [windowDimensions, setWindowDimensions] = useState<WindowDimensions>({\n    width: typeof window !== \"undefined\" ? window.innerWidth : false,\n    height: typeof window !== \"undefined\" ? window.innerHeight : false,\n    scrollX: typeof window !== \"undefined\" ? window.scrollX : 0,\n    scrollY: typeof window !== \"undefined\" ? window.scrollY : 0,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions((prevState) => ({\n        ...prevState,\n        width: window.innerWidth,\n        height: window.innerHeight,\n      }));\n    };\n\n    const handleScroll = () => {\n      requestAnimationFrame(() => {\n        setWindowDimensions((prevState) => ({\n          ...prevState,\n          scrollX: window.scrollX,\n          scrollY: window.scrollY,\n        }));\n      });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  console.log(\"window dimensions:\", windowDimensions);\n\n  return windowDimensions;\n};\n\nexport default useWindowDimension;\n"],"names":[],"mappings":";;;AAAA;;;AASA,MAAM,qBAAqB;;IACzB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;QACzE,OAAO,uCAAgC,OAAO,UAAU;QACxD,QAAQ,uCAAgC,OAAO,WAAW;QAC1D,SAAS,uCAAgC,OAAO,OAAO;QACvD,SAAS,uCAAgC,OAAO,OAAO;IACzD;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,MAAM;6DAAe;oBACnB;qEAAoB,CAAC,YAAc,CAAC;gCAClC,GAAG,SAAS;gCACZ,OAAO,OAAO,UAAU;gCACxB,QAAQ,OAAO,WAAW;4BAC5B,CAAC;;gBACH;;YAEA,MAAM;6DAAe;oBACnB;qEAAsB;4BACpB;6EAAoB,CAAC,YAAc,CAAC;wCAClC,GAAG,SAAS;wCACZ,SAAS,OAAO,OAAO;wCACvB,SAAS,OAAO,OAAO;oCACzB,CAAC;;wBACH;;gBACF;;YAEA,OAAO,gBAAgB,CAAC,UAAU;YAClC,OAAO,gBAAgB,CAAC,UAAU;YAElC;gDAAO;oBACL,OAAO,mBAAmB,CAAC,UAAU;oBACrC,OAAO,mBAAmB,CAAC,UAAU;gBACvC;;QACF;uCAAG,EAAE;IAEL,QAAQ,GAAG,CAAC,sBAAsB;IAElC,OAAO;AACT;GAvCM;uCAyCS","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/next-fs/components/layout/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport useWindowDimension from \"@/hooks/useWindowDimension\";\nimport { useState, useEffect } from \"react\";\nimport Image from \"next/image\";\n\ninterface NavbarProps {\n  onSideBar: () => void;\n}\n\nconst Navbar = ({ onSideBar }: NavbarProps) => {\n  const { scrollY, width } = useWindowDimension();\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    if (scrollY > 50) {\n      setIsScrolled(true);\n    } else {\n      setIsScrolled(false);\n    }\n  }, [scrollY]);\n\n  return (\n    <nav\n      className={`z-10 block w-full fixed top-0 transform translate-z-0 transition-all duration-300 ${\n        isScrolled ? \"bg-white bg-opacity-30 backdrop-blur-md\" : \"\"\n      }`}\n    >\n      <div\n        className={`wrap px-[36px] max-md:px-[16px] max-w-[1920px] mx-auto bg-transparent`}\n      >\n        <div\n          className={`flex justify-between min-h-[57px] ${\n            isScrolled ? \"items-center\" : \"items-start\"\n          }  w-full px-0 py-[12px]`}\n        >\n          <div\n            className=\"left flex items-center space-x-4 min-h-[30px] cursor-pointer\"\n            onClick={onSideBar}\n          >\n            <span>\n              <div className=\"flex flex-col justify-between items-center w-5 h-5 bg-transparent border-0\">\n                <span className=\"block w-full h-[3px] bg-black\"></span>\n                <span className=\"block w-full h-[3px] bg-black\"></span>\n                <span className=\"block w-full h-[3px] bg-black\"></span>\n              </div>\n            </span>\n            <span className=\"font-regular-title-bold\">MENU</span>\n          </div>\n\n          <div className=\"mid text-center flex-1 relative\">\n            <Image\n              src=\"/images/brand-title.svg\"\n              alt=\"Hero Background\"\n              width={1200}\n              height={600}\n              className={`object-cover transition-all duration-300 ${\n                isScrolled || (typeof width === \"number\" && width <= 992)\n                  ? // ? \"h-[30px] max-w-[130px]\"\n                    // : \"h-[90px] max-w-[390px]\"\n                    \"h-[40px] max-w-[310px]\"\n                  : \"h-[90px] max-w-[700px]\"\n              }  z-0`}\n            />\n            {/* <h1 className=\"text-[64px] font-brand-title\">LE NOUVEA</h1> */}\n          </div>\n\n          <div className=\"right flex items-center space-x-4 font-regular-title-bold min-h-[30px]\">\n            {typeof width === \"number\" && width > 768 && (\n              <span>BUY THE ISSUE</span>\n            )}\n            <span>USA</span>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAUA,MAAM,SAAS,CAAC,EAAE,SAAS,EAAe;;IACxC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAkB,AAAD;IAC5C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,IAAI,UAAU,IAAI;gBAChB,cAAc;YAChB,OAAO;gBACL,cAAc;YAChB;QACF;2BAAG;QAAC;KAAQ;IAEZ,qBACE,6LAAC;QACC,WAAW,CAAC,kFAAkF,EAC5F,aAAa,4CAA4C,IACzD;kBAEF,cAAA,6LAAC;YACC,WAAW,CAAC,qEAAqE,CAAC;sBAElF,cAAA,6LAAC;gBACC,WAAW,CAAC,kCAAkC,EAC5C,aAAa,iBAAiB,cAC/B,uBAAuB,CAAC;;kCAEzB,6LAAC;wBACC,WAAU;wBACV,SAAS;;0CAET,6LAAC;0CACC,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;;;;;;sDAChB,6LAAC;4CAAK,WAAU;;;;;;sDAChB,6LAAC;4CAAK,WAAU;;;;;;;;;;;;;;;;;0CAGpB,6LAAC;gCAAK,WAAU;0CAA0B;;;;;;;;;;;;kCAG5C,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAW,CAAC,yCAAyC,EACnD,cAAe,OAAO,UAAU,YAAY,SAAS,MAEjD,6BAA6B;4BAC7B,2BACA,yBACL,KAAK,CAAC;;;;;;;;;;;kCAKX,6LAAC;wBAAI,WAAU;;4BACZ,OAAO,UAAU,YAAY,QAAQ,qBACpC,6LAAC;0CAAK;;;;;;0CAER,6LAAC;0CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlB;GAnEM;;QACuB,8HAAA,CAAA,UAAkB;;;KADzC;uCAqES","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/next-fs/components/layout/Sidebar.tsx"],"sourcesContent":["\"use client\";\n\ninterface SideBarProps {\n  isOpen: boolean;\n}\n\nconst Sidebar = ({ isOpen }: SideBarProps) => {\n  return (\n    <nav\n      className={`\n        fixed top-0 left-0 h-full z-20 overflow-y-scroll bg-white\n        transition-all duration-200 ease-[cubic-bezier(.55,0,.1,1)]\n        ${isOpen ? \"w-[320px]\" : \"w-0\"}\n      `}\n    >\n      {/* Sidebar içeriği buraya */}\n      <div></div>\n    </nav>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":";;;;AAAA;;AAMA,MAAM,UAAU,CAAC,EAAE,MAAM,EAAgB;IACvC,qBACE,6LAAC;QACC,WAAW,CAAC;;;QAGV,EAAE,SAAS,cAAc,MAAM;MACjC,CAAC;kBAGD,cAAA,6LAAC;;;;;;;;;;AAGP;KAbM;uCAeS","debugId":null}}]
}