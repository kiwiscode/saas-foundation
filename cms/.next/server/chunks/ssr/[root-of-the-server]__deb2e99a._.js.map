{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/db/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport default prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/server-actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport prisma from \"../db/db\";\n\nexport async function getNewsLetterSubscribers() {\n  try {\n    const newsletterSubscribers = await prisma.newsletterSubscriber.findMany();\n\n    if (!newsletterSubscribers) {\n      throw new Error(\"Users not found.\");\n    }\n\n    return newsletterSubscribers;\n  } catch (error) {\n    console.error(`Error fetching users :`, error);\n    throw new Error(\"Error occured while fetching users.\");\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,wBAAwB,MAAM,wGAAA,CAAA,UAAM,CAAC,oBAAoB,CAAC,QAAQ;QAExE,IAAI,CAAC,uBAAuB;YAC1B,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,sBAAsB,CAAC,EAAE;QACxC,MAAM,IAAI,MAAM;IAClB;AACF;;;IAbsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/.next-internal/server/app/%28routes%29/subscribers/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getNewsLetterSubscribers as '004e5fd4694520d084d85590fb1e8a0b92e00abea0'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/components/columns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/components/columns.tsx <module evaluation>\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,4EACA","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/components/columns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/components/columns.tsx\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wDACA","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/data-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/data-table.tsx <module evaluation>\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oEACA","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/data-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/data-table.tsx\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gDACA","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/data/schema.ts"],"sourcesContent":["import { z } from \"zod\";\n\n// We're keeping a simple non-relational schema here.\n// IRL, you will have a schema for your data models.\nexport const taskSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  status: z.string(),\n  label: z.string(),\n  priority: z.string(),\n});\n\n// Define the Zod schema for the NewsletterSubscriber model\nexport const newsletterSubscriberSchema = z.object({\n  id: z.number().int(), // Prisma'da Int tipi\n  email: z.string().email(), // Email formatı doğrulaması\n  name: z.string().optional(), // Optional name field\n  createdAt: z.date().default(() => new Date()), // Default current date for createdAt\n  status: z.string().default(\"active\"), // Default status is \"active\"\n  source: z.string().default(\"website\").optional(), // Optional source, defaults to \"website\"\n  tags: z.array(z.string()), // Tags as an array of strings\n  language: z.string().optional(), // Optional language field\n  country: z.string().optional(), // Optional country field\n  city: z.string().optional(), // Optional city field\n  consent: z.boolean().default(true), // Default consent is true\n  unsubscribedAt: z.date().optional(), // Optional unsubscribedAt timestamp\n});\n\nexport type Task = z.infer<typeof taskSchema>;\nexport type NewsletterSubscriber = z.infer<typeof newsletterSubscriberSchema>;\n"],"names":[],"mappings":";;;;AAAA;;AAIO,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,IAAI,oIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;IACf,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;IACf,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAGO,MAAM,6BAA6B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,IAAI,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;IAClB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;IACvB,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACzB,WAAW,oIAAA,CAAA,IAAC,CAAC,IAAI,GAAG,OAAO,CAAC,IAAM,IAAI;IACtC,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAC3B,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC,WAAW,QAAQ;IAC9C,MAAM,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM;IACtB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACzB,SAAS,oIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IAC7B,gBAAgB,oIAAA,CAAA,IAAC,CAAC,IAAI,GAAG,QAAQ;AACnC","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/app/%28routes%29/subscribers/page.tsx"],"sourcesContent":["import { promises as fs } from \"fs\";\nimport path from \"path\";\nimport { Metadata } from \"next\";\nimport { z } from \"zod\";\n\nimport { columns } from \"../../../components/ui/table/components/columns\";\nimport { DataTable } from \"../../../components/ui/table/data-table\";\nimport { taskSchema } from \"../../../components/ui/table/data/schema\";\nimport { getNewsLetterSubscribers } from \"@/server-actions/user.actions\";\n\nexport const metadata: Metadata = {\n  title: \"Newsletter Subscribers\",\n  description: \"A task and issue tracker build using Tanstack Table.\",\n};\n\n// Simulate a database read for tasks.\nasync function getTasks() {\n  const data = await fs.readFile(\n    path.join(process.cwd(), \"/components/ui/table/data/task.json\")\n  );\n\n  const tasks = JSON.parse(data.toString());\n\n  return z.array(taskSchema).parse(tasks);\n}\n\nconst getSubscribers = async () => {\n  try {\n    const subscribers = await getNewsLetterSubscribers();\n\n    console.log(\"subscribers:\", subscribers);\n    return subscribers;\n  } catch (error) {\n    console.error(\"error:\", error);\n  }\n};\n\nexport default async function TaskPage() {\n  const tasks = await getTasks();\n\n  console.log(\"subscribers:\", getSubscribers());\n\n  return (\n    <>\n      <div className=\"hidden h-full flex-1 flex-col space-y-8 p-8 md:flex \">\n        <div className=\"flex items-center justify-between space-y-2\">\n          <div>\n            <h2 className=\"text-2xl font-bold tracking-tight\">Welcome back!</h2>\n            <p className=\"text-[var(--color-muted-foreground)]\">\n              Here&apos;s a list of your Newsletter subscribers!\n            </p>\n          </div>\n          {/* <div className=\"flex items-center space-x-2\">\n            <UserNav />\n          </div> */}\n        </div>\n        <DataTable data={tasks} columns={columns} />\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEA,sCAAsC;AACtC,eAAe;IACb,MAAM,OAAO,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAC5B,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAG3B,MAAM,QAAQ,KAAK,KAAK,CAAC,KAAK,QAAQ;IAEtC,OAAO,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,2IAAA,CAAA,aAAU,EAAE,KAAK,CAAC;AACnC;AAEA,MAAM,iBAAiB;IACrB,IAAI;QACF,MAAM,cAAc,MAAM,CAAA,GAAA,oIAAA,CAAA,2BAAwB,AAAD;QAEjD,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU;IAC1B;AACF;AAEe,eAAe;IAC5B,MAAM,QAAQ,MAAM;IAEpB,QAAQ,GAAG,CAAC,gBAAgB;IAE5B,qBACE;kBACE,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,8OAAC;gCAAE,WAAU;0CAAuC;;;;;;;;;;;;;;;;;8BAQxD,8OAAC,2IAAA,CAAA,YAAS;oBAAC,MAAM;oBAAO,SAAS,mJAAA,CAAA,UAAO;;;;;;;;;;;;;AAIhD","debugId":null}}]
}