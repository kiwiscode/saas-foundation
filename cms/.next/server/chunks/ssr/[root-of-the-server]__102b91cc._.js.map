{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/next-fashion-app/cms/db/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport default prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/next-fashion-app/cms/server-actions/user.actions.ts"],"sourcesContent":["\"use server\";\n\nimport prisma from \"../db/db\";\n\nexport async function getNewsLetterSubscribers() {\n  try {\n    const newsletterSubscribers = await prisma.newsletterSubscriber.findMany();\n\n    if (!newsletterSubscribers) {\n      throw new Error(\"Users not found.\");\n    }\n\n    return newsletterSubscribers;\n  } catch (error) {\n    console.error(`Error fetching users :`, error);\n    throw new Error(\"Error occured while fetching users.\");\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,wBAAwB,MAAM,wGAAA,CAAA,UAAM,CAAC,oBAAoB,CAAC,QAAQ;QAExE,IAAI,CAAC,uBAAuB;YAC1B,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,sBAAsB,CAAC,EAAE;QACxC,MAAM,IAAI,MAAM;IAClB;AACF;;;IAbsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/next-fashion-app/cms/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getNewsLetterSubscribers as '004e5fd4694520d084d85590fb1e8a0b92e00abea0'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/next-fashion-app/cms/app/page.tsx"],"sourcesContent":["import { getNewsLetterSubscribers } from \"@/server-actions/user.actions\";\n\nexport default function Home() {\n  const getSubscribers = async () => {\n    try {\n      const subscribers = await getNewsLetterSubscribers();\n\n      console.log(\"subscribers:\", subscribers);\n    } catch (error) {\n      console.error(\"error:\", error);\n    }\n  };\n\n  return <div> LE NOUVEAU CMS</div>;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,cAAc,MAAM,CAAA,GAAA,oIAAA,CAAA,2BAAwB,AAAD;YAEjD,QAAQ,GAAG,CAAC,gBAAgB;QAC9B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,UAAU;QAC1B;IACF;IAEA,qBAAO,8OAAC;kBAAI;;;;;;AACd","debugId":null}}]
}