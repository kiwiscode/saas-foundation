{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/components/columns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/components/columns.tsx <module evaluation>\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,4EACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/components/columns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/components/columns.tsx\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wDACA","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/data-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/data-table.tsx <module evaluation>\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oEACA","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/data-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table/data-table.tsx\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gDACA","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/components/ui/table/data/schema.ts"],"sourcesContent":["import { z } from \"zod\";\n\n// We're keeping a simple non-relational schema here.\n// IRL, you will have a schema for your data models.\nexport const taskSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  status: z.string(),\n  label: z.string(),\n  priority: z.string(),\n});\n\nexport type Task = z.infer<typeof taskSchema>;\n"],"names":[],"mappings":";;;AAAA;;AAIO,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,IAAI,oIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;IACf,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;IACf,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;AACpB","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiwiscode/Desktop/projects/Trend-app/cms/app/%28routes%29/subscribers/page.tsx"],"sourcesContent":["import { promises as fs } from \"fs\";\nimport path from \"path\";\nimport { Metadata } from \"next\";\nimport { z } from \"zod\";\n\nimport { columns } from \"../../../components/ui/table/components/columns\";\nimport { DataTable } from \"../../../components/ui/table/data-table\";\nimport { taskSchema } from \"../../../components/ui/table/data/schema\";\n\nexport const metadata: Metadata = {\n  title: \"Newsletter Subscribers\",\n  description: \"A task and issue tracker build using Tanstack Table.\",\n};\n\n// Simulate a database read for tasks.\nasync function getTasks() {\n  const data = await fs.readFile(\n    path.join(process.cwd(), \"/components/ui/table/data/task.json\")\n  );\n\n  const tasks = JSON.parse(data.toString());\n\n  return z.array(taskSchema).parse(tasks);\n}\n\nexport default async function TaskPage() {\n  const tasks = await getTasks();\n\n  return (\n    <>\n      <div className=\"hidden h-full flex-1 flex-col space-y-8 p-8 md:flex \">\n        <div className=\"flex items-center justify-between space-y-2\">\n          <div>\n            <h2 className=\"text-2xl font-bold tracking-tight\">Welcome back!</h2>\n            <p className=\"text-[var(--color-muted-foreground)]\">\n              Here&apos;s a list of your Newsletter subscribers!\n            </p>\n          </div>\n          {/* <div className=\"flex items-center space-x-2\">\n            <UserNav />\n          </div> */}\n        </div>\n        <DataTable data={tasks} columns={columns} />\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEA,sCAAsC;AACtC,eAAe;IACb,MAAM,OAAO,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAC5B,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAG3B,MAAM,QAAQ,KAAK,KAAK,CAAC,KAAK,QAAQ;IAEtC,OAAO,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,2IAAA,CAAA,aAAU,EAAE,KAAK,CAAC;AACnC;AAEe,eAAe;IAC5B,MAAM,QAAQ,MAAM;IAEpB,qBACE;kBACE,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,8OAAC;gCAAE,WAAU;0CAAuC;;;;;;;;;;;;;;;;;8BAQxD,8OAAC,2IAAA,CAAA,YAAS;oBAAC,MAAM;oBAAO,SAAS,mJAAA,CAAA,UAAO;;;;;;;;;;;;;AAIhD","debugId":null}}]
}